<div class="page">

  <div class="container col-12 col-lg-6 py-4" id="entry-container" entry-id="{{data.entryId}}">

    <div class="d-flex align-items-center justify-content-between mb-3">
      <a href="/logout">تسجيل الخروج</a>

      <div class="d-flex">
        <div class="dropdown" dir="rtl">
          <button class="btn btn-outline w-100" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown"
            aria-expanded="false">
            تحميلات النماذج الأخرى
          </button>
          <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton">
            {{#each data.uploads}}
            <li>
              <a class="dropdown-item" href="/get-family/{{this._id}}">
                {{#if this.name}}
                {{this.name}}
                {{else}}
                رقم الدخول {{inc @index}}
                {{/if}}
              </a>
            </li>
            {{/each}}
          </ul>
        </div>

        {{#if (gt data.remaining 0)}}
        <a href="/new-family" class="btn btn-primary-outline border-1 border-blue ms-2 w-100" type="button">
          <span class="d-none d-md-inline-block">اضافة يتيم جديد</span>
          <span class="d-inline-block d-md-none"><i class="ti ti-plus"></i></span>
        </a>
        {{/if}}
      </div>

    </div>

    <div class="card mb-3" {{#if data.rtl}}dir="rtl" {{/if}}>
      <div class="card-body">
        <p class="text-small">يمكنك إضافة <span class="fw-bold">{{data.remaining}}</span> إدخالات أخرى. لإضافة أكثر من
          ذلك يرجى الاتصال بنا على <a href="mailto:info@akeurope.org">info@akeurope.org</a>
        </p>
      </div>
    </div>

    <div class="card">
      <div class="card-body">
        <div class="mb-3" {{#if data.rtl}}dir="rtl" {{/if}}>
          {{{data.formFields}}}
        </div>
        <div class="form-footer">
          <button class="btn btn-primary w-100" onclick="saveForm(this)">تسجيل</button>
        </div>
        </form>
      </div>
    </div>
  </div>
</div>

<script src="/static/form.js"></script>
<script>

  const uploadImage = function (elem) {
    const fileInput = $(elem).find("input[type=file]");
    fileInput[0].click();
    fileInput.off('change').on('change', function () {
      let inputName = $(this).attr("name");
      if (event.target.files && event.target.files[0]) {
        var reader = new FileReader();
        reader.onload = function (e) {
          $(elem).closest(".image-upload").find("img").attr("src", e.target.result);
        };

        reader.readAsDataURL(event.target.files[0]);

        var formData = new FormData();
        formData.append('image', event.target.files[0]);
        formData.append('folderName', `akeurope/akeurope_forms/family-form/${inputName}`);
        formData.append('fieldName', $(this).attr("name"));
        formData.append('entryId', $('#entry-container').attr("entry-id"));

        $(elem).closest(".image-upload").find(".btn").html(`<span class="spinner-border spinner-border-sm" role="status"></span>`);

        $.ajax({
          url: '/upload-image',
          type: 'POST',
          data: formData,
          contentType: false,
          processData: false,
          success: async function (response) {
            await saveField(inputName, response.cloudinaryUrl);
            $(elem).closest('.image-controller').addClass('is-valid');
            $(elem).closest(".image-upload").find(".cloudinaryUrl").val(response.cloudinaryUrl);
            $(elem).closest(".image-upload").find(".btn").html(`
                <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-check"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M5 12l5 5l10 -10" /></svg>
              `);
            $(elem).closest(".image-upload").find("img").attr("src", response.cloudinaryUrl);
          },
          error: function (error) {
            $(elem).closest('.image-controller').addClass('is-invalid');
            $(elem).closest(".image-upload").find(".btn").html(`
                <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-x"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M18 6l-12 12" /><path d="M6 6l12 12" /></svg>
              `);
            alert("Error uploading image:", error.responseText);
          }
        });
      }
    });
  }

  const saveField = async function (fieldName, string) {

    if (!fieldName || !string) return alert('field name and string is missing');

    const entryId = $('#entry-container').attr('entry-id');
    await $.ajax({
      url: `/update-family-field/${entryId}`,
      method: 'POST',
      contentType: 'application/json',
      data: JSON.stringify({ fieldName, string }),
      success: response => {
        console.log(response);
        console.log('field saved successfully');
      },
      error: error => {
        console.log(error.responseText);
        throw new Error(error.responseText);
      }
    })
  }

  const validateField = async function (fieldName, string) {
    if (!fieldName || !string) return alert('field name and string is missing');
    const entryId = $('#entry-container').attr('entry-id');

    await $.ajax({
      url: `/validate-family-field/${entryId}`,
      method: 'POST',
      contentType: 'application/json',
      data: JSON.stringify({ fieldName, string }),
      success: response => {
        console.log(response);
      },
      error: error => {
        console.log(error);
        console.log(error.responseText);
        throw new Error(error.responseText);
      }
    })
  };

</script>